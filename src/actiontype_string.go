// Code generated by "stringer -type=actionType"; DO NOT EDIT.

package fzf

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[actIgnore-0]
	_ = x[actStart-1]
	_ = x[actClick-2]
	_ = x[actInvalid-3]
	_ = x[actChar-4]
	_ = x[actMouse-5]
	_ = x[actBeginningOfLine-6]
	_ = x[actAbort-7]
	_ = x[actAccept-8]
	_ = x[actAcceptNonEmpty-9]
	_ = x[actAcceptOrPrintQuery-10]
	_ = x[actBackwardChar-11]
	_ = x[actBackwardDeleteChar-12]
	_ = x[actBackwardDeleteCharEof-13]
	_ = x[actBackwardWord-14]
	_ = x[actCancel-15]
	_ = x[actChangeBorderLabel-16]
	_ = x[actChangeHeader-17]
	_ = x[actChangeMulti-18]
	_ = x[actChangePreviewLabel-19]
	_ = x[actChangePrompt-20]
	_ = x[actTogglePrompt-21]
	_ = x[actChangeQuery-22]
	_ = x[actClearScreen-23]
	_ = x[actClearQuery-24]
	_ = x[actClearSelection-25]
	_ = x[actClose-26]
	_ = x[actDeleteChar-27]
	_ = x[actDeleteCharEof-28]
	_ = x[actEndOfLine-29]
	_ = x[actFatal-30]
	_ = x[actForwardChar-31]
	_ = x[actForwardWord-32]
	_ = x[actKillLine-33]
	_ = x[actKillWord-34]
	_ = x[actUnixLineDiscard-35]
	_ = x[actUnixWordRubout-36]
	_ = x[actYank-37]
	_ = x[actBackwardKillWord-38]
	_ = x[actSelectAll-39]
	_ = x[actDeselectAll-40]
	_ = x[actToggle-41]
	_ = x[actToggleSearch-42]
	_ = x[actToggleAll-43]
	_ = x[actToggleDown-44]
	_ = x[actToggleUp-45]
	_ = x[actToggleIn-46]
	_ = x[actToggleOut-47]
	_ = x[actToggleTrack-48]
	_ = x[actToggleTrackCurrent-49]
	_ = x[actToggleHeader-50]
	_ = x[actToggleWrap-51]
	_ = x[actTrackCurrent-52]
	_ = x[actUntrackCurrent-53]
	_ = x[actDown-54]
	_ = x[actUp-55]
	_ = x[actPageUp-56]
	_ = x[actPageDown-57]
	_ = x[actPosition-58]
	_ = x[actHalfPageUp-59]
	_ = x[actHalfPageDown-60]
	_ = x[actOffsetUp-61]
	_ = x[actOffsetDown-62]
	_ = x[actOffsetMiddle-63]
	_ = x[actJump-64]
	_ = x[actJumpAccept-65]
	_ = x[actPrintQuery-66]
	_ = x[actRefreshPreview-67]
	_ = x[actReplaceQuery-68]
	_ = x[actToggleSort-69]
	_ = x[actShowPreview-70]
	_ = x[actHidePreview-71]
	_ = x[actTogglePreview-72]
	_ = x[actTogglePreviewFocus-73]
	_ = x[actTogglePreviewWrap-74]
	_ = x[actTransform-75]
	_ = x[actTransformBorderLabel-76]
	_ = x[actTransformHeader-77]
	_ = x[actTransformPreviewLabel-78]
	_ = x[actTransformPrompt-79]
	_ = x[actTransformQuery-80]
	_ = x[actPreview-81]
	_ = x[actChangePreview-82]
	_ = x[actChangePreviewWindow-83]
	_ = x[actPreviewTop-84]
	_ = x[actPreviewBottom-85]
	_ = x[actPreviewUp-86]
	_ = x[actPreviewDown-87]
	_ = x[actPreviewPageUp-88]
	_ = x[actPreviewPageDown-89]
	_ = x[actPreviewHalfPageUp-90]
	_ = x[actPreviewHalfPageDown-91]
	_ = x[actPrevHistory-92]
	_ = x[actPrevSelected-93]
	_ = x[actPrint-94]
	_ = x[actPut-95]
	_ = x[actNextHistory-96]
	_ = x[actNextSelected-97]
	_ = x[actExecute-98]
	_ = x[actExecuteSilent-99]
	_ = x[actExecuteMulti-100]
	_ = x[actExecuteAndExitOnSuccess-101]
	_ = x[actSigStop-102]
	_ = x[actFirst-103]
	_ = x[actLast-104]
	_ = x[actReload-105]
	_ = x[actReloadSync-106]
	_ = x[actEnableReload-107]
	_ = x[actDisableReload-108]
	_ = x[actToggleReload-109]
	_ = x[actDisableSearch-110]
	_ = x[actEnableSearch-111]
	_ = x[actSelect-112]
	_ = x[actDeselect-113]
	_ = x[actUnbind-114]
	_ = x[actRebind-115]
	_ = x[actBecome-116]
	_ = x[actShowHeader-117]
	_ = x[actHideHeader-118]
}

const _actionType_name = "actIgnoreactStartactClickactInvalidactCharactMouseactBeginningOfLineactAbortactAcceptactAcceptNonEmptyactAcceptOrPrintQueryactBackwardCharactBackwardDeleteCharactBackwardDeleteCharEofactBackwardWordactCancelactChangeBorderLabelactChangeHeaderactChangeMultiactChangePreviewLabelactChangePromptactTogglePromptactChangeQueryactClearScreenactClearQueryactClearSelectionactCloseactDeleteCharactDeleteCharEofactEndOfLineactFatalactForwardCharactForwardWordactKillLineactKillWordactUnixLineDiscardactUnixWordRuboutactYankactBackwardKillWordactSelectAllactDeselectAllactToggleactToggleSearchactToggleAllactToggleDownactToggleUpactToggleInactToggleOutactToggleTrackactToggleTrackCurrentactToggleHeaderactToggleWrapactTrackCurrentactUntrackCurrentactDownactUpactPageUpactPageDownactPositionactHalfPageUpactHalfPageDownactOffsetUpactOffsetDownactOffsetMiddleactJumpactJumpAcceptactPrintQueryactRefreshPreviewactReplaceQueryactToggleSortactShowPreviewactHidePreviewactTogglePreviewactTogglePreviewFocusactTogglePreviewWrapactTransformactTransformBorderLabelactTransformHeaderactTransformPreviewLabelactTransformPromptactTransformQueryactPreviewactChangePreviewactChangePreviewWindowactPreviewTopactPreviewBottomactPreviewUpactPreviewDownactPreviewPageUpactPreviewPageDownactPreviewHalfPageUpactPreviewHalfPageDownactPrevHistoryactPrevSelectedactPrintactPutactNextHistoryactNextSelectedactExecuteactExecuteSilentactExecuteMultiactExecuteAndExitOnSuccessactSigStopactFirstactLastactReloadactReloadSyncactEnableReloadactDisableReloadactToggleReloadactDisableSearchactEnableSearchactSelectactDeselectactUnbindactRebindactBecomeactShowHeaderactHideHeader"

var _actionType_index = [...]uint16{0, 9, 17, 25, 35, 42, 50, 68, 76, 85, 102, 123, 138, 159, 183, 198, 207, 227, 242, 256, 277, 292, 307, 321, 335, 348, 365, 373, 386, 402, 414, 422, 436, 450, 461, 472, 490, 507, 514, 533, 545, 559, 568, 583, 595, 608, 619, 630, 642, 656, 677, 692, 705, 720, 737, 744, 749, 758, 769, 780, 793, 808, 819, 832, 847, 854, 867, 880, 897, 912, 925, 939, 953, 969, 990, 1010, 1022, 1045, 1063, 1087, 1105, 1122, 1132, 1148, 1170, 1183, 1199, 1211, 1225, 1241, 1259, 1279, 1301, 1315, 1330, 1338, 1344, 1358, 1373, 1383, 1399, 1414, 1440, 1450, 1458, 1465, 1474, 1487, 1502, 1518, 1533, 1549, 1564, 1573, 1584, 1593, 1602, 1611, 1624, 1637}

func (i actionType) String() string {
	if i < 0 || i >= actionType(len(_actionType_index)-1) {
		return "actionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _actionType_name[_actionType_index[i]:_actionType_index[i+1]]
}
