// Code generated by "stringer -type=actionType"; DO NOT EDIT.

package fzf

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[actIgnore-0]
	_ = x[actStart-1]
	_ = x[actClick-2]
	_ = x[actInvalid-3]
	_ = x[actChar-4]
	_ = x[actMouse-5]
	_ = x[actBeginningOfLine-6]
	_ = x[actAbort-7]
	_ = x[actAccept-8]
	_ = x[actAcceptNonEmpty-9]
	_ = x[actAcceptOrPrintQuery-10]
	_ = x[actBackwardChar-11]
	_ = x[actBackwardDeleteChar-12]
	_ = x[actBackwardDeleteCharEof-13]
	_ = x[actBackwardWord-14]
	_ = x[actCancel-15]
	_ = x[actChangeBorderLabel-16]
	_ = x[actChangeHeader-17]
	_ = x[actChangeMulti-18]
	_ = x[actChangePreviewLabel-19]
	_ = x[actChangePrompt-20]
	_ = x[actTogglePrompt-21]
	_ = x[actDefaultPrompt-22]
	_ = x[actChangeQuery-23]
	_ = x[actClearScreen-24]
	_ = x[actClearQuery-25]
	_ = x[actClearSelection-26]
	_ = x[actClose-27]
	_ = x[actDeleteChar-28]
	_ = x[actDeleteCharEof-29]
	_ = x[actEndOfLine-30]
	_ = x[actFatal-31]
	_ = x[actForwardChar-32]
	_ = x[actForwardWord-33]
	_ = x[actKillLine-34]
	_ = x[actKillWord-35]
	_ = x[actUnixLineDiscard-36]
	_ = x[actUnixWordRubout-37]
	_ = x[actYank-38]
	_ = x[actBackwardKillWord-39]
	_ = x[actSelectAll-40]
	_ = x[actDeselectAll-41]
	_ = x[actToggle-42]
	_ = x[actToggleSearch-43]
	_ = x[actToggleAll-44]
	_ = x[actToggleDown-45]
	_ = x[actToggleUp-46]
	_ = x[actToggleIn-47]
	_ = x[actToggleOut-48]
	_ = x[actToggleTrack-49]
	_ = x[actToggleTrackCurrent-50]
	_ = x[actToggleHeader-51]
	_ = x[actToggleWrap-52]
	_ = x[actTrackCurrent-53]
	_ = x[actUntrackCurrent-54]
	_ = x[actDown-55]
	_ = x[actUp-56]
	_ = x[actPageUp-57]
	_ = x[actPageDown-58]
	_ = x[actPosition-59]
	_ = x[actHalfPageUp-60]
	_ = x[actHalfPageDown-61]
	_ = x[actOffsetUp-62]
	_ = x[actOffsetDown-63]
	_ = x[actOffsetMiddle-64]
	_ = x[actJump-65]
	_ = x[actJumpAccept-66]
	_ = x[actPrintQuery-67]
	_ = x[actRefreshPreview-68]
	_ = x[actReplaceQuery-69]
	_ = x[actToggleSort-70]
	_ = x[actShowPreview-71]
	_ = x[actHidePreview-72]
	_ = x[actTogglePreview-73]
	_ = x[actTogglePreviewFocus-74]
	_ = x[actTogglePreviewWrap-75]
	_ = x[actTransform-76]
	_ = x[actTransformBorderLabel-77]
	_ = x[actTransformHeader-78]
	_ = x[actTransformPreviewLabel-79]
	_ = x[actTransformPrompt-80]
	_ = x[actTransformQuery-81]
	_ = x[actPreview-82]
	_ = x[actChangePreview-83]
	_ = x[actChangePreviewWindow-84]
	_ = x[actPreviewTop-85]
	_ = x[actPreviewBottom-86]
	_ = x[actPreviewUp-87]
	_ = x[actPreviewDown-88]
	_ = x[actPreviewPageUp-89]
	_ = x[actPreviewPageDown-90]
	_ = x[actPreviewHalfPageUp-91]
	_ = x[actPreviewHalfPageDown-92]
	_ = x[actPrevHistory-93]
	_ = x[actPrevSelected-94]
	_ = x[actPrint-95]
	_ = x[actPut-96]
	_ = x[actNextHistory-97]
	_ = x[actNextSelected-98]
	_ = x[actExecute-99]
	_ = x[actExecuteSilent-100]
	_ = x[actExecuteMulti-101]
	_ = x[actExecuteAndExitOnSuccess-102]
	_ = x[actSigStop-103]
	_ = x[actFirst-104]
	_ = x[actLast-105]
	_ = x[actReload-106]
	_ = x[actReloadSync-107]
	_ = x[actEnableReload-108]
	_ = x[actDisableReload-109]
	_ = x[actToggleReload-110]
	_ = x[actDisableSearch-111]
	_ = x[actEnableSearch-112]
	_ = x[actSelect-113]
	_ = x[actDeselect-114]
	_ = x[actUnbind-115]
	_ = x[actRebind-116]
	_ = x[actBecome-117]
	_ = x[actShowHeader-118]
	_ = x[actHideHeader-119]
}

const _actionType_name = "actIgnoreactStartactClickactInvalidactCharactMouseactBeginningOfLineactAbortactAcceptactAcceptNonEmptyactAcceptOrPrintQueryactBackwardCharactBackwardDeleteCharactBackwardDeleteCharEofactBackwardWordactCancelactChangeBorderLabelactChangeHeaderactChangeMultiactChangePreviewLabelactChangePromptactTogglePromptactDefaultPromptactChangeQueryactClearScreenactClearQueryactClearSelectionactCloseactDeleteCharactDeleteCharEofactEndOfLineactFatalactForwardCharactForwardWordactKillLineactKillWordactUnixLineDiscardactUnixWordRuboutactYankactBackwardKillWordactSelectAllactDeselectAllactToggleactToggleSearchactToggleAllactToggleDownactToggleUpactToggleInactToggleOutactToggleTrackactToggleTrackCurrentactToggleHeaderactToggleWrapactTrackCurrentactUntrackCurrentactDownactUpactPageUpactPageDownactPositionactHalfPageUpactHalfPageDownactOffsetUpactOffsetDownactOffsetMiddleactJumpactJumpAcceptactPrintQueryactRefreshPreviewactReplaceQueryactToggleSortactShowPreviewactHidePreviewactTogglePreviewactTogglePreviewFocusactTogglePreviewWrapactTransformactTransformBorderLabelactTransformHeaderactTransformPreviewLabelactTransformPromptactTransformQueryactPreviewactChangePreviewactChangePreviewWindowactPreviewTopactPreviewBottomactPreviewUpactPreviewDownactPreviewPageUpactPreviewPageDownactPreviewHalfPageUpactPreviewHalfPageDownactPrevHistoryactPrevSelectedactPrintactPutactNextHistoryactNextSelectedactExecuteactExecuteSilentactExecuteMultiactExecuteAndExitOnSuccessactSigStopactFirstactLastactReloadactReloadSyncactEnableReloadactDisableReloadactToggleReloadactDisableSearchactEnableSearchactSelectactDeselectactUnbindactRebindactBecomeactShowHeaderactHideHeader"

var _actionType_index = [...]uint16{0, 9, 17, 25, 35, 42, 50, 68, 76, 85, 102, 123, 138, 159, 183, 198, 207, 227, 242, 256, 277, 292, 307, 323, 337, 351, 364, 381, 389, 402, 418, 430, 438, 452, 466, 477, 488, 506, 523, 530, 549, 561, 575, 584, 599, 611, 624, 635, 646, 658, 672, 693, 708, 721, 736, 753, 760, 765, 774, 785, 796, 809, 824, 835, 848, 863, 870, 883, 896, 913, 928, 941, 955, 969, 985, 1006, 1026, 1038, 1061, 1079, 1103, 1121, 1138, 1148, 1164, 1186, 1199, 1215, 1227, 1241, 1257, 1275, 1295, 1317, 1331, 1346, 1354, 1360, 1374, 1389, 1399, 1415, 1430, 1456, 1466, 1474, 1481, 1490, 1503, 1518, 1534, 1549, 1565, 1580, 1589, 1600, 1609, 1618, 1627, 1640, 1653}

func (i actionType) String() string {
	if i < 0 || i >= actionType(len(_actionType_index)-1) {
		return "actionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _actionType_name[_actionType_index[i]:_actionType_index[i+1]]
}
